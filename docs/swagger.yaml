# docs/swagger.yaml
openapi: 3.0.0
info:
  title: Photo Caption Contest API
  version: 1.0.0
  description: |
    API for managing photo caption contests.
    - Secured endpoints require JWT authentication
    - All image paths are relative to `/public/assets/images/`
servers:
  - url: http://localhost:4000
    description: Development server
  - url: https://your-render-app.onrender.com
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: "john_doe"
        email:
          type: string
          example: "john@example.com"
        isAdmin:
          type: boolean
          example: false
    Caption:
      type: object
      properties:
        id:
          type: integer
          example: 5
        text:
          type: string
          example: "Funny caption!"
        author:
          type: string
          example: "john_doe"
        createdAt:
          type: string
          format: date-time
          example: "2024-05-25T12:34:56.789Z"
    ImageResponse:
      type: object
      properties:
        imageUrl:
          type: string
          example: "/assets/images/imageCaption1.jpg"
        captions:
          type: array
          items:
            $ref: '#/components/schemas/Caption'
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Image not found"

paths:
  /images:
    get:
      tags: [Images]
      summary: Get all images
      responses:
        '200':
          description: List of available images
          content:
            application/json:
              example: ["/assets/images/imageCaption1.jpg", "/assets/images/imageCaption2.jpg"]
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /images/{id}:
    get:
      tags: [Images]
      summary: Get image details with captions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Image details with captions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
              example:
                imageUrl: "/assets/images/imageCaption1.jpg"
                captions:
                  - id: 1
                    text: "Great photo!"
                    author: "john_doe"
                    createdAt: "2024-05-25T12:34:56.789Z"
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Image not found"

  /images/{id}/captions:
    post:
      tags: [Captions]
      summary: Add caption to image (Authenticated)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                captionText:
                  type: string
                  example: "This is hilarious!"
              required: [captionText]
      responses:
        '201':
          description: Caption created
          content:
            application/json:
              example:
                message: "Caption added successfully"
                caption:
                  id: 5
                  text: "This is hilarious!"
                  createdAt: "2024-05-25T12:34:56.789Z"
        '401':
          description: Unauthorized
        '404':
          description: Image not found

  /auth/register:
    post:
      tags: [Authentication]
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                email:
                  type: string
                  example: "john@example.com"
                password:
                  type: string
                  example: "securePassword123!"
              required: [username, email, password]
      responses:
        '201':
          description: User registered
          content:
            application/json:
              example:
                message: "User registered successfully"
        '400':
          description: Validation error
          content:
            application/json:
              example:
                error: "User already exists"

  /auth/login:
    post:
      tags: [Authentication]
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john@example.com"
                password:
                  type: string
                  example: "securePassword123!"
              required: [email, password]
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              example:
                message: "Logged in successfully"
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid credentials